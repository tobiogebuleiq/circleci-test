# This config is equivalent to both the '.circleci/extended/orb-free.yml' and the base '.circleci/config.yml'
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  node: circleci/node@4.7
  azure-cli: circleci/azure-cli@1.0.0

executors:
  docker-executor: 
    docker:
    -  image: cimg/node:12.16

jobs: 
  test:
    executor: docker-executor
    steps:
      - node/test:
          # This is the node version to use for the `cimg/node` tag
          # Relevant tags can be found on the CircleCI Developer Hub
          # https://circleci.com/developer/images/image/cimg/node
          version: '12.16'
          # If you are using yarn, change the line below from "npm" to "yarn"
          pkg-manager: npm
  
  build:
    executor: docker-executor
    steps:
      - node/test:
          # This is the node version to use for the `cimg/node` tag
          # Relevant tags can be found on the CircleCI Developer Hub
          # https://circleci.com/developer/images/image/cimg/node
          version: '12.16'
          # If you are using yarn, change the line below from "npm" to "yarn"
          pkg-manager: npm

  verify-az-install:
    executor: azure-cli/default
    steps: 
      - azure-cli/install
      - run:
          command: az -v
          name: Verify azure CLI is installed

  login-to-azure:
    executor: azure-cli/azure-docker
    steps:
      - azure-cli/login-with-service-principal

      - run:
          name: List webapp resources of tenant stored as `AZURE_SP_TENANT` env var
          command: az webapp list

  deploy-app:
    executor: docker-executor
    steps:
      - checkout
      - run:
          name: Store values on the webapp resource for deployment
          command: |
            export APPNAME=$(az webapp list --query [0].name --output tsv)
            export APPRG=$(az webapp list --query [0].resourceGroup --output tsv)
            export APPPLAN=$(az appservice plan list --query [0].name --output tsv)
            export APPSKU=$(az appservice plan list --query [0].sku.name --output tsv)
            export APPLOCATION=$(az appservice plan list --query [0].location --output tsv)
      - run:
          name: deploy to azure app service
          command: az webapp up --name $APPNAME --resource-group $APPRG --plan $APPPLAN --sku $APPSKU --location "$APPLOCATION"

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  test: 
    jobs:
      - node/run:
          npm-run: test

  deploy:
    jobs:
      - node/run:
          npm-run: test
      - verify-az-install
      - login-to-azure:
          requires:
            - verify-az-install # only login once azure install job has completed
      - deploy-app:
          requires:
            - login-to-azure # only deploy once azure login job has completed